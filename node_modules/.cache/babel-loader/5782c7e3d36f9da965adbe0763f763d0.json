{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danie\\\\Desktop\\\\dev\\\\ramp-fe-challenge\\\\src\\\\components\\\\InputCheckbox\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport classNames from \"classnames\";\nimport { useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InputCheckbox = _ref => {\n  _s();\n\n  let {\n    id,\n    checked = false,\n    disabled,\n    onChange\n  } = _ref;\n  const {\n    current: inputId\n  } = useRef(`RampInputCheckbox-${id}`);\n  const [isChecked, setIsChecked] = useState(checked);\n  useEffect(() => {\n    const storedChecked = localStorage.getItem(\"checked\");\n\n    if (storedChecked) {\n      setIsChecked(storedChecked === \"checked\");\n      localStorage.setItem(\"checked\", \"checked\");\n    } else {\n      setIsChecked(checked);\n      localStorage.setItem(\"checked\", \"not checked\");\n    }\n  }, [checked]);\n\n  function handleClick() {\n    var _document$getElementB;\n\n    (_document$getElementB = document.getElementById(inputId)) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.click();\n    localStorage.setItem(\"checked\", !checked ? \"checked\" : \"not checked\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RampInputCheckbox--container\",\n    \"data-testid\": inputId,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: classNames(\"RampInputCheckbox--label\", {\n        \"RampInputCheckbox--label-checked\": checked,\n        \"RampInputCheckbox--label-disabled\": disabled\n      }),\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: inputId,\n      readOnly: true,\n      type: \"checkbox\",\n      className: \"RampInputCheckbox--input\",\n      checked: checked,\n      disabled: disabled,\n      onClick: () => {\n        setIsChecked(!isChecked);\n        onChange(!checked);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputCheckbox, \"3WCcl45H08KrBWt4oSYOGXF6YCk=\");\n\n_c = InputCheckbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputCheckbox\");","map":{"version":3,"names":["classNames","useRef","useState","useEffect","InputCheckbox","id","checked","disabled","onChange","current","inputId","isChecked","setIsChecked","storedChecked","localStorage","getItem","setItem","handleClick","document","getElementById","click"],"sources":["C:/Users/Danie/Desktop/dev/ramp-fe-challenge/src/components/InputCheckbox/index.tsx"],"sourcesContent":["import classNames from \"classnames\"\nimport { useRef,useState, useEffect } from \"react\"\nimport { InputCheckboxComponent } from \"./types\"\n\nexport const InputCheckbox: InputCheckboxComponent = ({ id, checked = false, disabled, onChange }) => {\n  const { current: inputId } = useRef(`RampInputCheckbox-${id}`)\n  const [isChecked, setIsChecked] = useState(checked)\n\n  useEffect(() => {\n    const storedChecked = localStorage.getItem(\"checked\")\n    if (storedChecked) {\n      setIsChecked(storedChecked === \"checked\")\n      localStorage.setItem(\"checked\", \"checked\")\n    } else {\n      setIsChecked(checked)\n      localStorage.setItem(\"checked\", \"not checked\")\n    }\n  }, [checked])\n\n  function handleClick(){\n    document.getElementById(inputId)?.click()\n    localStorage.setItem(\"checked\", !checked ? \"checked\" : \"not checked\")\n  }\n\n  return (\n    <div className=\"RampInputCheckbox--container\" data-testid={inputId}>\n      <label\n        className={classNames(\"RampInputCheckbox--label\", {\n          \"RampInputCheckbox--label-checked\": checked,\n          \"RampInputCheckbox--label-disabled\": disabled,\n        })}\n        onClick={handleClick}\n      />\n      <input\n        id={inputId}\n        readOnly={true}\n        type=\"checkbox\"\n        className=\"RampInputCheckbox--input\"\n        checked={checked}\n        disabled={disabled}\n        onClick={() => {\n          setIsChecked(!isChecked)\n          onChange(!checked)\n        }}\n      />\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAASC,MAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAGA,OAAO,MAAMC,aAAqC,GAAG,QAAiD;EAAA;;EAAA,IAAhD;IAAEC,EAAF;IAAMC,OAAO,GAAG,KAAhB;IAAuBC,QAAvB;IAAiCC;EAAjC,CAAgD;EACpG,MAAM;IAAEC,OAAO,EAAEC;EAAX,IAAuBT,MAAM,CAAE,qBAAoBI,EAAG,EAAzB,CAAnC;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAACI,OAAD,CAA1C;EAEAH,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAtB;;IACA,IAAIF,aAAJ,EAAmB;MACjBD,YAAY,CAACC,aAAa,KAAK,SAAnB,CAAZ;MACAC,YAAY,CAACE,OAAb,CAAqB,SAArB,EAAgC,SAAhC;IACD,CAHD,MAGO;MACLJ,YAAY,CAACN,OAAD,CAAZ;MACAQ,YAAY,CAACE,OAAb,CAAqB,SAArB,EAAgC,aAAhC;IACD;EACF,CATQ,EASN,CAACV,OAAD,CATM,CAAT;;EAWA,SAASW,WAAT,GAAsB;IAAA;;IACpB,yBAAAC,QAAQ,CAACC,cAAT,CAAwBT,OAAxB,iFAAkCU,KAAlC;IACAN,YAAY,CAACE,OAAb,CAAqB,SAArB,EAAgC,CAACV,OAAD,GAAW,SAAX,GAAuB,aAAvD;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,8BAAf;IAA8C,eAAaI,OAA3D;IAAA,wBACE;MACE,SAAS,EAAEV,UAAU,CAAC,0BAAD,EAA6B;QAChD,oCAAoCM,OADY;QAEhD,qCAAqCC;MAFW,CAA7B,CADvB;MAKE,OAAO,EAAEU;IALX;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MACE,EAAE,EAAEP,OADN;MAEE,QAAQ,EAAE,IAFZ;MAGE,IAAI,EAAC,UAHP;MAIE,SAAS,EAAC,0BAJZ;MAKE,OAAO,EAAEJ,OALX;MAME,QAAQ,EAAEC,QANZ;MAOE,OAAO,EAAE,MAAM;QACbK,YAAY,CAAC,CAACD,SAAF,CAAZ;QACAH,QAAQ,CAAC,CAACF,OAAF,CAAR;MACD;IAVH;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CA3CM;;GAAMF,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}